package bean;

import org.itheima.recycler.bean.BasePageBean;

import java.util.List;

/**
 * Created by Administrator on 2017/11/8 0008.
 */

public class Deatail extends BasePageBean<Deatail.ResultBean.AboutsBean>{
    /**
     * code : 1
     * message : success
     * result : {"abouts":[{"commentCount":32,"content":"Angular 5.0.0 发布了。主要更新内容如下： animations:允许 @ .disabled 属性在没有表达式的情况下工作 (#18713) (2159342) animations: 检测到无效的 CSS 属性时报告错误 (#18718) (409688f), 关闭 #18701 animations: 支持 increment 和递减转换别名 (6f45519) animations: 支持负查询限制值 (86ffacf), closes #19259 更多更新内容请查看发布说明。  完整的 Angular 5.0 新特性中文介绍请看 https://my.oschina.net/...","href":"https://www.oschina.net/news/90170/angular-5-0-0","id":90170,"statistics":{"comment":32,"favCount":0,"like":0,"transmit":0,"view":2735},"title":"Angular 5.0.0 发布，Web 前端框架","type":6,"viewCount":2735},{"commentCount":0,"content":"Django 1.11.6 发布了。Django 是一个高级的 Python Web 框架，旨在快速开发和简单，实用的设计。更新内容如下： Made the CharField form field convert whitespace-only values to theempty_value when strip is enabled (#28555). Fixed crash when using the name of a model\u2019s autogenerated primary key (id) in an Index\u2019s fields (#28597). Fixed a regression in Django 1.9 where a custom view error handler suc...","href":"https://www.oschina.net/news/89326/django-1-11-6","id":89326,"statistics":{"comment":0,"favCount":0,"like":0,"transmit":0,"view":709},"title":"Django 1.11.6 发布，Python 的 Web 框架","type":6,"viewCount":709},{"commentCount":1,"content":"Apache Wicket PMC 宣布 Apache Wicket 6.28.0 已正式发布。 该版本是 Wicket 6 的另一个小版本，现在 Wicket 使用了语义化版本的命名方式，与 6.0.0 相比，该版本没有出现破坏性 API。 此外，该版本修复了 WICKET-6457 和 WICKET-6465 这两个会导致页面存储在会话结束时不被清除的问题。 使用 <dependency>\r\n    <groupId>org.apache.wicket<\/groupId>\r\n    <artifactId>wicket-core<\/artifactId>\r\n    <version>...","href":"https://www.oschina.net/news/89253/wicket-6-28-0-released","id":89253,"statistics":{"comment":1,"favCount":0,"like":0,"transmit":0,"view":433},"title":"Apache Wicket 6.28.0 发布，Web 开发框架","type":6,"viewCount":433},{"commentCount":5,"content":"Apache Wicket 7.9.0 已发布，这是一个面向 Java 组件的 Web 应用框架，为电商、学校、城市、银行、电子邮件提供商等提供数千个 Web 应用和网站的支持。 该版本是 Wicket 7 的一个小版本。该项目采用的是语义版本控制，在未有大版本号发布的前提下，与 7.0.0 相比不会有大的 API 突破。 此版本修复了导致页面存储在会话结束时不被清除的错误。详情 使用方式： <dependency>\r\n    <groupId>org.apache.wicket<\/groupId>\r\n  ...","href":"https://www.oschina.net/news/88888/apache-wicket-7-9-0","id":88888,"statistics":{"comment":5,"favCount":0,"like":0,"transmit":0,"view":1606},"title":"Apache Wicket 7.9.0 发布，Web 开发框架","type":6,"viewCount":1606},{"commentCount":2,"content":"Angular 4.4.1 已发布，更新内容： Bug 修复 animations: do not leak DOM nodes/styling for host triggered animations (#18853) (1cc3fe2), closes #18606 common: fix improper packaging for @angular/common/http (#18613) (a203a95) common: fix XSSI prefix stripping by using JSON.parse always (#18466) (8821723), closes #18396 #18453 compiler: normalize the locale name (#18963) (497e017) core: c...","href":"https://www.oschina.net/news/88778/angular-4-4-1","id":88778,"statistics":{"comment":2,"favCount":0,"like":0,"transmit":0,"view":930},"title":"Angular 4.4.1 发布，Web 前端框架","type":6,"viewCount":930}],"author":"局长","authorId":2720166,"authorPortrait":"https://static.oschina.net/uploads/user/1360/2720166_50.jpg?t=1470892376000","authorRelation":4,"body":"<p>今天的互联网围墙高耸，每一个巨头都围绕它自己构建了一个完整的生态系统。以视频呼叫类应用为例：微软有 Skype ，苹果有 Facetime，Google 有 Duo，这些应用都受限于各自的围墙。这种互联网服务日益中心化的趋势不是我们曾经设想过的互联网。我们曾经设想过的互联网是人人平等的去中心化系统，不依赖于单一的中心化机构。然而Web的演化却是走向中心化，搜索引擎Google独大，社交网络Facebook独大，聊天类应用也日益集中到少数服务如WhatsApp。<\/p> \n<p>今天，一场去中心化运动正在兴起，它试图将互联网的力量归还给普通的网民，这场运动的关键是隐私、数据的可控和安全，<a href=\"https://techcrunch.com/2016/10/09/a-decentralized-web-would-give-power-back-to-the-people-online/\" target=\"_blank\" rel=\"nofollow\">它可以称之为去中心化Web或Web 3.0<\/a>。<\/p> \n<p>Github是基于去中心化的分布式版本控制系统Git，而区块链技术从数字加密货币推广到了更多领域。<\/p> \n<p>来自：<a href=\"http://www.solidot.org/story?sid=49934\" target=\"_blank\" rel=\"nofollow\">Solidot奇客<\/a><\/p>","commentCount":33,"favorite":false,"href":"https://www.oschina.net/news/77953/decentralized-web-give-power-back-to-the-people-online","id":77953,"pubDate":"2016-10-11 00:00:00","title":"去中心化 Web 将权力归还给网民","viewCount":7173}
     * time : 2017-11-08 21:47:17
     */

    private int code;
    private String message;
    private ResultBean result;
    private String time;

    public int getCode() {
        return code;
    }

    public void setCode(int code) {
        this.code = code;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public ResultBean getResult() {
        return result;
    }

    public void setResult(ResultBean result) {
        this.result = result;
    }

    public String getTime() {
        return time;
    }

    public void setTime(String time) {
        this.time = time;
    }

    @Override
    public List getItemDatas() {
        return result.abouts;
    }

    public static class ResultBean {
        /**
         * abouts : [{"commentCount":32,"content":"Angular 5.0.0 发布了。主要更新内容如下： animations:允许 @ .disabled 属性在没有表达式的情况下工作 (#18713) (2159342) animations: 检测到无效的 CSS 属性时报告错误 (#18718) (409688f), 关闭 #18701 animations: 支持 increment 和递减转换别名 (6f45519) animations: 支持负查询限制值 (86ffacf), closes #19259 更多更新内容请查看发布说明。  完整的 Angular 5.0 新特性中文介绍请看 https://my.oschina.net/...","href":"https://www.oschina.net/news/90170/angular-5-0-0","id":90170,"statistics":{"comment":32,"favCount":0,"like":0,"transmit":0,"view":2735},"title":"Angular 5.0.0 发布，Web 前端框架","type":6,"viewCount":2735},{"commentCount":0,"content":"Django 1.11.6 发布了。Django 是一个高级的 Python Web 框架，旨在快速开发和简单，实用的设计。更新内容如下： Made the CharField form field convert whitespace-only values to theempty_value when strip is enabled (#28555). Fixed crash when using the name of a model\u2019s autogenerated primary key (id) in an Index\u2019s fields (#28597). Fixed a regression in Django 1.9 where a custom view error handler suc...","href":"https://www.oschina.net/news/89326/django-1-11-6","id":89326,"statistics":{"comment":0,"favCount":0,"like":0,"transmit":0,"view":709},"title":"Django 1.11.6 发布，Python 的 Web 框架","type":6,"viewCount":709},{"commentCount":1,"content":"Apache Wicket PMC 宣布 Apache Wicket 6.28.0 已正式发布。 该版本是 Wicket 6 的另一个小版本，现在 Wicket 使用了语义化版本的命名方式，与 6.0.0 相比，该版本没有出现破坏性 API。 此外，该版本修复了 WICKET-6457 和 WICKET-6465 这两个会导致页面存储在会话结束时不被清除的问题。 使用 <dependency>\r\n    <groupId>org.apache.wicket<\/groupId>\r\n    <artifactId>wicket-core<\/artifactId>\r\n    <version>...","href":"https://www.oschina.net/news/89253/wicket-6-28-0-released","id":89253,"statistics":{"comment":1,"favCount":0,"like":0,"transmit":0,"view":433},"title":"Apache Wicket 6.28.0 发布，Web 开发框架","type":6,"viewCount":433},{"commentCount":5,"content":"Apache Wicket 7.9.0 已发布，这是一个面向 Java 组件的 Web 应用框架，为电商、学校、城市、银行、电子邮件提供商等提供数千个 Web 应用和网站的支持。 该版本是 Wicket 7 的一个小版本。该项目采用的是语义版本控制，在未有大版本号发布的前提下，与 7.0.0 相比不会有大的 API 突破。 此版本修复了导致页面存储在会话结束时不被清除的错误。详情 使用方式： <dependency>\r\n    <groupId>org.apache.wicket<\/groupId>\r\n  ...","href":"https://www.oschina.net/news/88888/apache-wicket-7-9-0","id":88888,"statistics":{"comment":5,"favCount":0,"like":0,"transmit":0,"view":1606},"title":"Apache Wicket 7.9.0 发布，Web 开发框架","type":6,"viewCount":1606},{"commentCount":2,"content":"Angular 4.4.1 已发布，更新内容： Bug 修复 animations: do not leak DOM nodes/styling for host triggered animations (#18853) (1cc3fe2), closes #18606 common: fix improper packaging for @angular/common/http (#18613) (a203a95) common: fix XSSI prefix stripping by using JSON.parse always (#18466) (8821723), closes #18396 #18453 compiler: normalize the locale name (#18963) (497e017) core: c...","href":"https://www.oschina.net/news/88778/angular-4-4-1","id":88778,"statistics":{"comment":2,"favCount":0,"like":0,"transmit":0,"view":930},"title":"Angular 4.4.1 发布，Web 前端框架","type":6,"viewCount":930}]
         * author : 局长
         * authorId : 2720166
         * authorPortrait : https://static.oschina.net/uploads/user/1360/2720166_50.jpg?t=1470892376000
         * authorRelation : 4
         * body : <p>今天的互联网围墙高耸，每一个巨头都围绕它自己构建了一个完整的生态系统。以视频呼叫类应用为例：微软有 Skype ，苹果有 Facetime，Google 有 Duo，这些应用都受限于各自的围墙。这种互联网服务日益中心化的趋势不是我们曾经设想过的互联网。我们曾经设想过的互联网是人人平等的去中心化系统，不依赖于单一的中心化机构。然而Web的演化却是走向中心化，搜索引擎Google独大，社交网络Facebook独大，聊天类应用也日益集中到少数服务如WhatsApp。</p>
         <p>今天，一场去中心化运动正在兴起，它试图将互联网的力量归还给普通的网民，这场运动的关键是隐私、数据的可控和安全，<a href="https://techcrunch.com/2016/10/09/a-decentralized-web-would-give-power-back-to-the-people-online/" target="_blank" rel="nofollow">它可以称之为去中心化Web或Web 3.0</a>。</p>
         <p>Github是基于去中心化的分布式版本控制系统Git，而区块链技术从数字加密货币推广到了更多领域。</p>
         <p>来自：<a href="http://www.solidot.org/story?sid=49934" target="_blank" rel="nofollow">Solidot奇客</a></p>
         * commentCount : 33
         * favorite : false
         * href : https://www.oschina.net/news/77953/decentralized-web-give-power-back-to-the-people-online
         * id : 77953
         * pubDate : 2016-10-11 00:00:00
         * title : 去中心化 Web 将权力归还给网民
         * viewCount : 7173
         */

        private String author;
        private int authorId;
        private String authorPortrait;
        private int authorRelation;
        private String body;
        private int commentCount;
        private boolean favorite;
        private String href;
        private int id;
        private String pubDate;
        private String title;
        private int viewCount;
        private List<AboutsBean> abouts;

        public String getAuthor() {
            return author;
        }

        public void setAuthor(String author) {
            this.author = author;
        }

        public int getAuthorId() {
            return authorId;
        }

        public void setAuthorId(int authorId) {
            this.authorId = authorId;
        }

        public String getAuthorPortrait() {
            return authorPortrait;
        }

        public void setAuthorPortrait(String authorPortrait) {
            this.authorPortrait = authorPortrait;
        }

        public int getAuthorRelation() {
            return authorRelation;
        }

        public void setAuthorRelation(int authorRelation) {
            this.authorRelation = authorRelation;
        }

        public String getBody() {
            return body;
        }

        public void setBody(String body) {
            this.body = body;
        }

        public int getCommentCount() {
            return commentCount;
        }

        public void setCommentCount(int commentCount) {
            this.commentCount = commentCount;
        }

        public boolean isFavorite() {
            return favorite;
        }

        public void setFavorite(boolean favorite) {
            this.favorite = favorite;
        }

        public String getHref() {
            return href;
        }

        public void setHref(String href) {
            this.href = href;
        }

        public int getId() {
            return id;
        }

        public void setId(int id) {
            this.id = id;
        }

        public String getPubDate() {
            return pubDate;
        }

        public void setPubDate(String pubDate) {
            this.pubDate = pubDate;
        }

        public String getTitle() {
            return title;
        }

        public void setTitle(String title) {
            this.title = title;
        }

        public int getViewCount() {
            return viewCount;
        }

        public void setViewCount(int viewCount) {
            this.viewCount = viewCount;
        }

        public List<AboutsBean> getAbouts() {
            return abouts;
        }

        public void setAbouts(List<AboutsBean> abouts) {
            this.abouts = abouts;
        }

        public static class AboutsBean {
            /**
             * commentCount : 32
             * content : Angular 5.0.0 发布了。主要更新内容如下： animations:允许 @ .disabled 属性在没有表达式的情况下工作 (#18713) (2159342) animations: 检测到无效的 CSS 属性时报告错误 (#18718) (409688f), 关闭 #18701 animations: 支持 increment 和递减转换别名 (6f45519) animations: 支持负查询限制值 (86ffacf), closes #19259 更多更新内容请查看发布说明。  完整的 Angular 5.0 新特性中文介绍请看 https://my.oschina.net/...
             * href : https://www.oschina.net/news/90170/angular-5-0-0
             * id : 90170
             * statistics : {"comment":32,"favCount":0,"like":0,"transmit":0,"view":2735}
             * title : Angular 5.0.0 发布，Web 前端框架
             * type : 6
             * viewCount : 2735
             */

            private int commentCount;
            private String content;
            private String href;
            public int id;
            private StatisticsBean statistics;
            private String title;
            private int type;
            private int viewCount;

            public int getCommentCount() {
                return commentCount;
            }

            public void setCommentCount(int commentCount) {
                this.commentCount = commentCount;
            }

            public String getContent() {
                return content;
            }

            public void setContent(String content) {
                this.content = content;
            }

            public String getHref() {
                return href;
            }

            public void setHref(String href) {
                this.href = href;
            }

            public int getId() {
                return id;
            }

            public void setId(int id) {
                this.id = id;
            }

            public StatisticsBean getStatistics() {
                return statistics;
            }

            public void setStatistics(StatisticsBean statistics) {
                this.statistics = statistics;
            }

            public String getTitle() {
                return title;
            }

            public void setTitle(String title) {
                this.title = title;
            }

            public int getType() {
                return type;
            }

            public void setType(int type) {
                this.type = type;
            }

            public int getViewCount() {
                return viewCount;
            }

            public void setViewCount(int viewCount) {
                this.viewCount = viewCount;
            }

            public static class StatisticsBean {
                /**
                 * comment : 32
                 * favCount : 0
                 * like : 0
                 * transmit : 0
                 * view : 2735
                 */

                private int comment;
                private int favCount;
                private int like;
                private int transmit;
                private int view;

                public int getComment() {
                    return comment;
                }

                public void setComment(int comment) {
                    this.comment = comment;
                }

                public int getFavCount() {
                    return favCount;
                }

                public void setFavCount(int favCount) {
                    this.favCount = favCount;
                }

                public int getLike() {
                    return like;
                }

                public void setLike(int like) {
                    this.like = like;
                }

                public int getTransmit() {
                    return transmit;
                }

                public void setTransmit(int transmit) {
                    this.transmit = transmit;
                }

                public int getView() {
                    return view;
                }

                public void setView(int view) {
                    this.view = view;
                }
            }
        }
    }
}
